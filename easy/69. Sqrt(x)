question:
Implement int sqrt(int x).

Compute and return the square root of x, where x is guaranteed to be a non-negative integer.

Since the return type is an integer, the decimal digits are truncated and only the integer part of the result is returned.

Example 1:

Input: 4
Output: 2

Example 2:

Input: 8
Output: 2
Explanation: The square root of 8 is 2.82842..., and since 
             the decimal part is truncated, 2 is returned.


solution:
class Solution:
    def mySqrt(self, x: int) -> int:
        left = 0
        right = x+1
        while left < right:
            middle = left + (right- left)//2
            if middle * middle == x:
                return middle
            if middle*middle > x:
                right = middle
            else:
                left = middle + 1
        return left - 1
        
这里采用的是二分法，根据模板直接写。
首选确定一个搜索范围，也就是left和right，随后按照模板，判断平方后严格大于X的数（不能是大于等于，必须是大于，不然会出现错误），最后返回值是left-1
